plugins {
	id 'org.jetbrains.kotlin.jvm' version '1.9.25'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.protobuf' version '0.9.4'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.25'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
	id 'org.jetbrains.kotlin.kapt' version '1.9.22'
}

group = 'io.madeformaid'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
	mavenLocal()
	maven {
		name = "GitHubPackages"
		url = uri("https://maven.pkg.github.com/tmdghks2515/made-for-maid.shared-lib")
		credentials {
			username = project.findProperty("gpr.user")
			password = project.findProperty("gpr.key")
		}
	}
	maven {
		name = "GitHubPackages"
		url = uri("https://maven.pkg.github.com/tmdghks2515/made-for-maid.webmvc-lib")
		credentials {
			username = project.findProperty("gpr.user")
			password = project.findProperty("gpr.key")
		}
	}
}

ext {
	set('springGrpcVersion', "0.6.0")
	set('springCloudVersion', "2024.0.1")
}

dependencies {
	implementation 'io.madeformaid:shared-lib:0.0.1-SNAPSHOT'
	implementation 'io.madeformaid:webmvc-lib:0.0.1-SNAPSHOT'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'io.grpc:grpc-services'
	implementation "io.grpc:grpc-kotlin-stub:1.4.1"
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.springframework.grpc:spring-grpc-server-web-spring-boot-starter'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'com.auth0:java-jwt:4.4.0'
	implementation("com.querydsl:querydsl-jpa:5.0.0:jakarta")
	kapt("com.querydsl:querydsl-apt:5.0.0:jakarta")
	kapt("jakarta.annotation:jakarta.annotation-api")
	kapt("jakarta.persistence:jakarta.persistence-api")
	kapt "javax.persistence:javax.persistence-api:2.2"
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testImplementation 'org.springframework.grpc:spring-grpc-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.grpc:spring-grpc-dependencies:${springGrpcVersion}"
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

kotlin {
	jvmToolchain {
		languageVersion.set(JavaLanguageVersion.of(21))
	}
}

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc'
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java'
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {
				option 'jakarta_omit'
				option '@generated=omit'
			}
		}
	}
}

allOpen {
	annotation 'jakarta.persistence.Entity'
	annotation 'jakarta.persistence.MappedSuperclass'
	annotation 'jakarta.persistence.Embeddable'
}

// QueryDSL 설정부 - start

def generated = layout.buildDirectory.dir("generated/source/kapt/main").get().asFile

// Kotlin sourceSet에 QClass 디렉토리 포함 (Gradle 9 호환)
sourceSets {
	main {
		kotlin {
			srcDirs += [generated]
		}
	}
}

// clean 시 QClass 삭제
tasks.named("clean") {
	doLast {
		delete generated
	}
}

kapt {
	generateStubs = true
}

// Gradle 9.0 대응 — kapt → generateProto 의존성 선언
afterEvaluate {
	tasks.named("kaptGenerateStubsKotlin") {
		dependsOn(tasks.named("generateProto"))
	}
}
// QueryDSL 설정부 - end

tasks.named('test') {
	useJUnitPlatform()
}
